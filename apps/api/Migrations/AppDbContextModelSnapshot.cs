// <auto-generated />
using System;
using CaseEstudo1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CaseEstudo1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CaseEstudo1.Domain.Bebida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bebidas");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Borda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Bordas");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.BordaPrecoPorTamanho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BordaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BordaId");

                    b.ToTable("BordasPrecosPorTamanhos");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeBebida")
                        .HasColumnType("text");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PizzaId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PrecoBebida")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefoneCliente")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BordaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeBebida")
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PrecoBebida")
                        .HasColumnType("numeric");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BordaId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.PizzaSabor", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("integer");

                    b.Property<int>("SaborId")
                        .HasColumnType("integer");

                    b.HasKey("PizzaId", "SaborId");

                    b.HasIndex("SaborId");

                    b.ToTable("PizzasSabores");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.PrecoBebidaPorTamanho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BebidaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BebidaId");

                    b.ToTable("PrecosBebidaPorTamanho");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Sabor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sabores");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.SaborIngrediente", b =>
                {
                    b.Property<int>("SaborId")
                        .HasColumnType("integer");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("integer");

                    b.HasKey("SaborId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("SaboresIngredientes");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.SaborPrecoPorTamanho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("SaborId")
                        .HasColumnType("integer");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SaborId");

                    b.ToTable("SaboresPrecosPorTamanhos");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.BordaPrecoPorTamanho", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Borda", "Borda")
                        .WithMany()
                        .HasForeignKey("BordaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borda");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Pedido", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Pizza", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Borda", "Borda")
                        .WithMany()
                        .HasForeignKey("BordaId");

                    b.Navigation("Borda");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.PizzaSabor", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaseEstudo1.Domain.Sabor", "Sabor")
                        .WithMany("PizzasSabores")
                        .HasForeignKey("SaborId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Sabor");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.PrecoBebidaPorTamanho", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Bebida", "Bebida")
                        .WithMany("Precos")
                        .HasForeignKey("BebidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bebida");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.SaborIngrediente", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Ingrediente", "Ingrediente")
                        .WithMany("SaboresIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaseEstudo1.Domain.Sabor", "Sabor")
                        .WithMany("SaboresIngredientes")
                        .HasForeignKey("SaborId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Sabor");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.SaborPrecoPorTamanho", b =>
                {
                    b.HasOne("CaseEstudo1.Domain.Sabor", "Sabor")
                        .WithMany()
                        .HasForeignKey("SaborId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sabor");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Bebida", b =>
                {
                    b.Navigation("Precos");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Ingrediente", b =>
                {
                    b.Navigation("SaboresIngredientes");
                });

            modelBuilder.Entity("CaseEstudo1.Domain.Sabor", b =>
                {
                    b.Navigation("PizzasSabores");

                    b.Navigation("SaboresIngredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
